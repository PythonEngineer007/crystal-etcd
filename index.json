{"repository_name":"etcd","body":"# crystal-etcd\n\n[![Build Status](https://travis-ci.org/aca-labs/crystal-etcd.svg?branch=master)](https://travis-ci.org/aca-labs/crystal-etcd)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://aca-labs.github.io/crystal-etcd/)\n\n[etcd](https://www.etcd.io/) client for [crystal lang](https://crystal-lang.org/) implemented as a thin wrapper over etcd's [gRPC-HTTP gateway](https://github.com/etcd-io/etcd/blob/master/Documentation/dev-guide/api_grpc_gateway.md).\n\nThis client was developed against etcd v3.3, to use a higher version, set `api_version` arg to an appropriate version prefix when instantiating the client.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     etcd:\n       github: aca-labs/crystal-etcd\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"etcd\"\n\n# Initialising a client from ETCD_HOST and ETCD_PORT\nclient = Etcd.from_env\n\n# Add a key/value to etcd\nclient.kv.put(\"/service/hello\", \"world\")\n# Grab a key/value from etcd\nclient.range(\"/service/hello\").kvs.try(&.first?) #=> #<Etcd::Model::KV @key=\"/service/hello\" @value=\"world\" @create_revision=nil  @mod_revision=nil @version=nil @lease=nil>\n```\n\n## TODO\n\n- Auth.\n- Multi-node.\n\n### Auth\n\n- [ ] authenticate\n- [ ] disable\n- [ ] enable\n- [ ] role/add\n- [ ] role/delete\n- [ ] role/get\n- [ ] role/grant\n- [ ] role/list\n- [ ] role/revoke\n- [ ] user/add\n- [ ] user/changepw\n- [ ] user/delete\n- [ ] user/get\n- [ ] user/grant\n- [ ] user/list\n- [ ] user/revoke\n\n### Cluster\n\n- [ ] member/add\n- [ ] member/list\n- [ ] member/promote\n- [ ] member/remove\n- [ ] member/update\n\n### Kv\n\n- [x] put\n- [x] range\n- [x] deleterange\n- [ ] compaction\n- [ ] txn\n\n### Lease\n\n- [x] grant\n- [x] keepalive\n- [x] leases\n- [x] revoke\n- [x] timetolive\n\n### Maintenance\n\n- [ ] alarm\n- [ ] defragment\n- [ ] hash\n- [ ] snapshot\n- [x] status\n- [ ] transfer-leadership\n\n### Watch\n\n- [x] watch\n\n## Contributing\n\n1. [Fork it](https://github.com/aca-labs/crystal-etcd/fork)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## See Also\n\n- [crystal-docker](https://github.com/aca-labs/crystal-docker)\n\n## Contributors\n\n- [Caspian Baska](https://github.com/caspiano) - creator and maintainer\n","program":{"html_id":"etcd/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"etcd","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"etcd/Etcd","path":"Etcd.html","kind":"module","full_name":"Etcd","name":"Etcd","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/etcd.cr","line_number":6,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd.cr#L6"},{"filename":"src/etcd/error.cr","line_number":3,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/error.cr#L3"},{"filename":"src/etcd/kv.cr","line_number":4,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L4"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"`shards version`","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"api(url:URI,api_version:String?=nil)-instance-method","html_id":"api(url:URI,api_version:String?=nil)-instance-method","name":"api","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"URI"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"args_string":"(url : URI, api_version : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd.cr#L28","def":{"name":"api","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"URI"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Etcd::Api.new(url: url, api_version: api_version)"}},{"id":"api(host:String,port:Int32?=nil,api_version:String?=nil)-instance-method","html_id":"api(host:String,port:Int32?=nil,api_version:String?=nil)-instance-method","name":"api","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"args_string":"(host : String, port : Int32? = <span class=\"n\">nil</span>, api_version : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd.cr#L32","def":{"name":"api","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Etcd::Api.new(host: host, port: port, api_version: api_version)"}},{"id":"client(url:URI,api_version:String?=nil)-instance-method","html_id":"client(url:URI,api_version:String?=nil)-instance-method","name":"client","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"URI"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"args_string":"(url : URI, api_version : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd.cr#L20","def":{"name":"client","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"URI"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Etcd::Client.new(url: url, api_version: api_version)"}},{"id":"client(host:String,port:Int32?=nil,api_version:String?=nil)-instance-method","html_id":"client(host:String,port:Int32?=nil,api_version:String?=nil)-instance-method","name":"client","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"args_string":"(host : String, port : Int32? = <span class=\"n\">nil</span>, api_version : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd.cr#L24","def":{"name":"client","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Etcd::Client.new(host: host, port: port, api_version: api_version)"}},{"id":"from_env(api_version:String?=nil)-instance-method","html_id":"from_env(api_version:String?=nil)-instance-method","name":"from_env","doc":null,"summary":null,"abstract":false,"args":[{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"args_string":"(api_version : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd.cr#L12","def":{"name":"from_env","args":[{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"client(host: ENV[\"ETCD_HOST\"]? || \"localhost\", port: ENV[\"ETCD_PORT\"]?.try(&.to_i) || 2379, api_version: api_version)"}}],"macros":[],"types":[{"html_id":"etcd/Etcd/Api","path":"Etcd/Api.html","kind":"class","full_name":"Etcd::Api","name":"Api","abstract":false,"superclass":{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/api.cr","line_number":5,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L5"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_HOST","name":"DEFAULT_HOST","value":"\"localhost\"","doc":null,"summary":null},{"id":"DEFAULT_PORT","name":"DEFAULT_PORT","value":"2379","doc":null,"summary":null},{"id":"DEFAULT_VERSION","name":"DEFAULT_VERSION","value":"\"v3beta\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(url:URI,api_version:String?=nil)-class-method","html_id":"new(url:URI,api_version:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"URI"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"args_string":"(url : URI, api_version : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L22","def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"URI"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(url, api_version)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(host:String=&quot;localhost&quot;,port:Int32?=nil,api_version:String?=nil)-class-method","html_id":"new(host:String=&quot;localhost&quot;,port:Int32?=nil,api_version:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"\"localhost\"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"args_string":"(host : String = <span class=\"s\">&quot;localhost&quot;</span>, port : Int32? = <span class=\"n\">nil</span>, api_version : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L30","def":{"name":"new","args":[{"name":"host","doc":null,"default_value":"\"localhost\"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host, port, api_version)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"api_version:String-instance-method","html_id":"api_version:String-instance-method","name":"api_version","doc":"API version","summary":"<p>API version</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L11","def":{"name":"api_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@api_version"}},{"id":"api_version=(api_version:String)-instance-method","html_id":"api_version=(api_version:String)-instance-method","name":"api_version=","doc":"API version","summary":"<p>API version</p>","abstract":false,"args":[{"name":"api_version","doc":null,"default_value":"","external_name":"api_version","restriction":"String"}],"args_string":"(api_version : String)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L11","def":{"name":"api_version=","args":[{"name":"api_version","doc":null,"default_value":"","external_name":"api_version","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@api_version = api_version"}},{"id":"connection:HTTP::Client-instance-method","html_id":"connection:HTTP::Client-instance-method","name":"connection","doc":":no_doc:\nUnderlying HTTP connection - exposed for access from test framework only.","summary":"<p>:no_doc: Underlying HTTP connection - exposed for access from test framework only.</p>","abstract":false,"args":[],"args_string":" : HTTP::Client","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L8","def":{"name":"connection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Client","visibility":"Public","body":"@connection"}},{"id":"delete(path,headers:HTTP::Headers,body:NamedTuple|Hash,&)-instance-method","html_id":"delete(path,headers:HTTP::Headers,body:NamedTuple|Hash,&)-instance-method","name":"delete","doc":"Executes a DELETE request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple` and yields streamed response entries to the block.","summary":"<p>Executes a DELETE request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code> and yields streamed response entries to the block.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"args_string":"(path, headers : HTTP::Headers, body : NamedTuple | Hash, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"headers[\"Content-Type\"] = \"application/json\"\nif body.nil?\nelse\n  body = to_stringly(body)\nend\ndelete(path, headers, body.to_json) do |response|\n  yield response\nend\n"}},{"id":"delete(path,body=nil)-instance-method","html_id":"delete(path,body=nil)-instance-method","name":"delete","doc":"Executes a DELETE request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple`... or a `Hash`.","summary":"<p>Executes a DELETE request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code>...</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"args_string":"(path, body = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"headers = HTTP::Headers {\"Content-Type\" => \"application/json\"}\nif body.nil?\nelse\n  body = to_stringly(body)\nend\ndelete(path, headers, body.to_json)\n"}},{"id":"delete(path,headers:HTTP::Headers,body=nil)-instance-method","html_id":"delete(path,headers:HTTP::Headers,body=nil)-instance-method","name":"delete","doc":"Executes a DELETE request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple`... or a `Hash`.","summary":"<p>Executes a DELETE request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code>...</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"args_string":"(path, headers : HTTP::Headers, body = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"headers[\"Content-Type\"] = \"application/json\"\nif body.nil?\nelse\n  body = to_stringly(body)\nend\ndelete(path, headers, body.to_json)\n"}},{"id":"delete(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType=nil,&)-instance-method","html_id":"delete(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType=nil,&)-instance-method","name":"delete","doc":"Executes a DELETE request and yields a `HTTP::Client::Response`.\n\nWhen working with endpoint that provide stream responses these may be accessed as available\nby calling `#body_io` on the yielded response object.\n\nThe response status will be automatically checked and a etcd::ApiError raised if\nunsuccessful.","summary":"<p>Executes a DELETE request and yields a <code>HTTP::Client::Response</code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType"}],"args_string":"(path, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : HTTP::Client::BodyType = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"path = \"/#{api_version}#{path}\"\nconnection.delete(path, headers, body) do |response|\n  if response.success?\n  else\n    raise(Etcd::ApiError.from_response(response))\n  end\n  yield response\nend\n"}},{"id":"delete(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType?=nil)-instance-method","html_id":"delete(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType?=nil)-instance-method","name":"delete","doc":"Executes a DELETE request on the etcd client connection.\n\nThe response status will be automatically checked and a Etcd::ApiError raised if\nunsuccessful.\n```","summary":"<p>Executes a DELETE request on the etcd client connection.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType | ::Nil"}],"args_string":"(path, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : HTTP::Client::BodyType? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"path = \"/#{api_version}#{path}\"\nresponse = connection.delete(path, headers, body)\nif response.success?\nelse\n  raise(Etcd::ApiError.from_response(response))\nend\nresponse\n"}},{"id":"delete(path,body:NamedTuple|Hash,&)-instance-method","html_id":"delete(path,body:NamedTuple|Hash,&)-instance-method","name":"delete","doc":"Executes a DELETE request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple` and yields streamed response entries to the block.","summary":"<p>Executes a DELETE request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code> and yields streamed response entries to the block.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"args_string":"(path, body : NamedTuple | Hash, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"headers = HTTP::Headers {\"Content-Type\" => \"application/json\"}\nif body.nil?\nelse\n  body = to_stringly(body)\nend\ndelete(path, headers, body.to_json) do |response|\n  yield response\nend\n"}},{"id":"get(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType=nil,&)-instance-method","html_id":"get(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType=nil,&)-instance-method","name":"get","doc":"Executes a GET request and yields a `HTTP::Client::Response`.\n\nWhen working with endpoint that provide stream responses these may be accessed as available\nby calling `#body_io` on the yielded response object.\n\nThe response status will be automatically checked and a etcd::ApiError raised if\nunsuccessful.","summary":"<p>Executes a GET request and yields a <code>HTTP::Client::Response</code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType"}],"args_string":"(path, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : HTTP::Client::BodyType = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"path = \"/#{api_version}#{path}\"\nconnection.get(path, headers, body) do |response|\n  if response.success?\n  else\n    raise(Etcd::ApiError.from_response(response))\n  end\n  yield response\nend\n"}},{"id":"get(path,headers:HTTP::Headers,body=nil)-instance-method","html_id":"get(path,headers:HTTP::Headers,body=nil)-instance-method","name":"get","doc":"Executes a GET request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple`... or a `Hash`.","summary":"<p>Executes a GET request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code>...</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"args_string":"(path, headers : HTTP::Headers, body = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"headers[\"Content-Type\"] = \"application/json\"\nif body.nil?\nelse\n  body = to_stringly(body)\nend\nget(path, headers, body.to_json)\n"}},{"id":"get(path,body=nil)-instance-method","html_id":"get(path,body=nil)-instance-method","name":"get","doc":"Executes a GET request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple`... or a `Hash`.","summary":"<p>Executes a GET request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code>...</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"args_string":"(path, body = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"headers = HTTP::Headers {\"Content-Type\" => \"application/json\"}\nif body.nil?\nelse\n  body = to_stringly(body)\nend\nget(path, headers, body.to_json)\n"}},{"id":"get(path,headers:HTTP::Headers,body:NamedTuple|Hash,&)-instance-method","html_id":"get(path,headers:HTTP::Headers,body:NamedTuple|Hash,&)-instance-method","name":"get","doc":"Executes a GET request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple` and yields streamed response entries to the block.","summary":"<p>Executes a GET request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code> and yields streamed response entries to the block.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"args_string":"(path, headers : HTTP::Headers, body : NamedTuple | Hash, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"headers[\"Content-Type\"] = \"application/json\"\nif body.nil?\nelse\n  body = to_stringly(body)\nend\nget(path, headers, body.to_json) do |response|\n  yield response\nend\n"}},{"id":"get(path,body:NamedTuple|Hash,&)-instance-method","html_id":"get(path,body:NamedTuple|Hash,&)-instance-method","name":"get","doc":"Executes a GET request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple` and yields streamed response entries to the block.","summary":"<p>Executes a GET request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code> and yields streamed response entries to the block.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"args_string":"(path, body : NamedTuple | Hash, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"headers = HTTP::Headers {\"Content-Type\" => \"application/json\"}\nif body.nil?\nelse\n  body = to_stringly(body)\nend\nget(path, headers, body.to_json) do |response|\n  yield response\nend\n"}},{"id":"get(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType?=nil)-instance-method","html_id":"get(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType?=nil)-instance-method","name":"get","doc":"Executes a GET request on the etcd client connection.\n\nThe response status will be automatically checked and a Etcd::ApiError raised if\nunsuccessful.\n```","summary":"<p>Executes a GET request on the etcd client connection.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType | ::Nil"}],"args_string":"(path, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : HTTP::Client::BodyType? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"path = \"/#{api_version}#{path}\"\nresponse = connection.get(path, headers, body)\nif response.success?\nelse\n  raise(Etcd::ApiError.from_response(response))\nend\nresponse\n"}},{"id":"host:String-instance-method","html_id":"host:String-instance-method","name":"host","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L13","def":{"name":"host","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@host"}},{"id":"port:Int32-instance-method","html_id":"port:Int32-instance-method","name":"port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L14","def":{"name":"port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@port"}},{"id":"post(path,headers:HTTP::Headers,body=nil)-instance-method","html_id":"post(path,headers:HTTP::Headers,body=nil)-instance-method","name":"post","doc":"Executes a POST request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple`... or a `Hash`.","summary":"<p>Executes a POST request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code>...</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"args_string":"(path, headers : HTTP::Headers, body = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"headers[\"Content-Type\"] = \"application/json\"\nif body.nil?\nelse\n  body = to_stringly(body)\nend\npost(path, headers, body.to_json)\n"}},{"id":"post(path,body:NamedTuple|Hash,&)-instance-method","html_id":"post(path,body:NamedTuple|Hash,&)-instance-method","name":"post","doc":"Executes a POST request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple` and yields streamed response entries to the block.","summary":"<p>Executes a POST request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code> and yields streamed response entries to the block.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"args_string":"(path, body : NamedTuple | Hash, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"headers = HTTP::Headers {\"Content-Type\" => \"application/json\"}\nif body.nil?\nelse\n  body = to_stringly(body)\nend\npost(path, headers, body.to_json) do |response|\n  yield response\nend\n"}},{"id":"post(path,headers:HTTP::Headers,body:NamedTuple|Hash,&)-instance-method","html_id":"post(path,headers:HTTP::Headers,body:NamedTuple|Hash,&)-instance-method","name":"post","doc":"Executes a POST request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple` and yields streamed response entries to the block.","summary":"<p>Executes a POST request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code> and yields streamed response entries to the block.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"args_string":"(path, headers : HTTP::Headers, body : NamedTuple | Hash, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"headers[\"Content-Type\"] = \"application/json\"\nif body.nil?\nelse\n  body = to_stringly(body)\nend\npost(path, headers, body.to_json) do |response|\n  yield response\nend\n"}},{"id":"post(path,body=nil)-instance-method","html_id":"post(path,body=nil)-instance-method","name":"post","doc":"Executes a POST request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple`... or a `Hash`.","summary":"<p>Executes a POST request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code>...</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"args_string":"(path, body = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"headers = HTTP::Headers {\"Content-Type\" => \"application/json\"}\nif body.nil?\nelse\n  body = to_stringly(body)\nend\npost(path, headers, body.to_json)\n"}},{"id":"post(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType=nil,&)-instance-method","html_id":"post(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType=nil,&)-instance-method","name":"post","doc":"Executes a POST request and yields a `HTTP::Client::Response`.\n\nWhen working with endpoint that provide stream responses these may be accessed as available\nby calling `#body_io` on the yielded response object.\n\nThe response status will be automatically checked and a etcd::ApiError raised if\nunsuccessful.","summary":"<p>Executes a POST request and yields a <code>HTTP::Client::Response</code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType"}],"args_string":"(path, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : HTTP::Client::BodyType = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"path = \"/#{api_version}#{path}\"\nconnection.post(path, headers, body) do |response|\n  if response.success?\n  else\n    raise(Etcd::ApiError.from_response(response))\n  end\n  yield response\nend\n"}},{"id":"post(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType?=nil)-instance-method","html_id":"post(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType?=nil)-instance-method","name":"post","doc":"Executes a POST request on the etcd client connection.\n\nThe response status will be automatically checked and a Etcd::ApiError raised if\nunsuccessful.\n```","summary":"<p>Executes a POST request on the etcd client connection.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType | ::Nil"}],"args_string":"(path, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : HTTP::Client::BodyType? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"path = \"/#{api_version}#{path}\"\nif body.nil?\n  body = \"{}\"\nend\nresponse = connection.post(path, headers, body)\nif response.success?\nelse\n  raise(Etcd::ApiError.from_response(response))\nend\nresponse\n"}},{"id":"put(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType=nil,&)-instance-method","html_id":"put(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType=nil,&)-instance-method","name":"put","doc":"Executes a PUT request and yields a `HTTP::Client::Response`.\n\nWhen working with endpoint that provide stream responses these may be accessed as available\nby calling `#body_io` on the yielded response object.\n\nThe response status will be automatically checked and a etcd::ApiError raised if\nunsuccessful.","summary":"<p>Executes a PUT request and yields a <code>HTTP::Client::Response</code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType"}],"args_string":"(path, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : HTTP::Client::BodyType = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"path = \"/#{api_version}#{path}\"\nconnection.put(path, headers, body) do |response|\n  if response.success?\n  else\n    raise(Etcd::ApiError.from_response(response))\n  end\n  yield response\nend\n"}},{"id":"put(path,headers:HTTP::Headers,body=nil)-instance-method","html_id":"put(path,headers:HTTP::Headers,body=nil)-instance-method","name":"put","doc":"Executes a PUT request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple`... or a `Hash`.","summary":"<p>Executes a PUT request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code>...</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"args_string":"(path, headers : HTTP::Headers, body = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"headers[\"Content-Type\"] = \"application/json\"\nif body.nil?\nelse\n  body = to_stringly(body)\nend\nput(path, headers, body.to_json)\n"}},{"id":"put(path,body=nil)-instance-method","html_id":"put(path,body=nil)-instance-method","name":"put","doc":"Executes a PUT request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple`... or a `Hash`.","summary":"<p>Executes a PUT request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code>...</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"args_string":"(path, body = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"headers = HTTP::Headers {\"Content-Type\" => \"application/json\"}\nif body.nil?\nelse\n  body = to_stringly(body)\nend\nput(path, headers, body.to_json)\n"}},{"id":"put(path,headers:HTTP::Headers,body:NamedTuple|Hash,&)-instance-method","html_id":"put(path,headers:HTTP::Headers,body:NamedTuple|Hash,&)-instance-method","name":"put","doc":"Executes a PUT request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple` and yields streamed response entries to the block.","summary":"<p>Executes a PUT request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code> and yields streamed response entries to the block.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"args_string":"(path, headers : HTTP::Headers, body : NamedTuple | Hash, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"headers[\"Content-Type\"] = \"application/json\"\nif body.nil?\nelse\n  body = to_stringly(body)\nend\nput(path, headers, body.to_json) do |response|\n  yield response\nend\n"}},{"id":"put(path,body:NamedTuple|Hash,&)-instance-method","html_id":"put(path,body:NamedTuple|Hash,&)-instance-method","name":"put","doc":"Executes a PUT request on the etcd client connection with a JSON body\nformed from the passed `NamedTuple` and yields streamed response entries to the block.","summary":"<p>Executes a PUT request on the etcd client connection with a JSON body formed from the passed <code>NamedTuple</code> and yields streamed response entries to the block.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"args_string":"(path, body : NamedTuple | Hash, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"NamedTuple | Hash"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"headers = HTTP::Headers {\"Content-Type\" => \"application/json\"}\nif body.nil?\nelse\n  body = to_stringly(body)\nend\nput(path, headers, body.to_json) do |response|\n  yield response\nend\n"}},{"id":"put(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType?=nil)-instance-method","html_id":"put(path,headers:HTTP::Headers?=nil,body:HTTP::Client::BodyType?=nil)-instance-method","name":"put","doc":"Executes a PUT request on the etcd client connection.\n\nThe response status will be automatically checked and a Etcd::ApiError raised if\nunsuccessful.\n```","summary":"<p>Executes a PUT request on the etcd client connection.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType | ::Nil"}],"args_string":"(path, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : HTTP::Client::BodyType? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L70","def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"HTTP::Client::BodyType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"path = \"/#{api_version}#{path}\"\nresponse = connection.put(path, headers, body)\nif response.success?\nelse\n  raise(Etcd::ApiError.from_response(response))\nend\nresponse\n"}},{"id":"spawn_connection-instance-method","html_id":"spawn_connection-instance-method","name":"spawn_connection","doc":"TODO: Add connection pooling.\nCurrently, there's contention on the http connection\nBetter to lease connections from a pool, and use the sclient object\nThis way, we can reuse the same infra around the connection","summary":"<p><span class=\"flag orange\">TODO</span>  Add connection pooling.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L44","def":{"name":"spawn_connection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if url\n  HTTP::Client.new(url.as(URI))\nelse\n  HTTP::Client.new(host, port)\nend"}},{"id":"token:String?-instance-method","html_id":"token:String?-instance-method","name":"token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L16","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@token"}},{"id":"url:URI?-instance-method","html_id":"url:URI?-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : URI?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/api.cr#L15","def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"URI | ::Nil","visibility":"Public","body":"@url"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/ApiError","path":"Etcd/ApiError.html","kind":"class","full_name":"Etcd::ApiError","name":"ApiError","abstract":false,"superclass":{"html_id":"etcd/Etcd/Error","kind":"class","full_name":"Etcd::Error","name":"Error"},"ancestors":[{"html_id":"etcd/Etcd/Error","kind":"class","full_name":"Etcd::Error","name":"Error"},{"html_id":"etcd/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/error.cr","line_number":8,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/error.cr#L8"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[{"id":"from_response(response)-class-method","html_id":"from_response(response)-class-method","name":"from_response","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"args_string":"(response)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/error.cr#L13","def":{"name":"from_response","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(response.status_code, response.body)"}}],"constructors":[{"id":"new(status_code:Int32,message=&quot;&quot;)-class-method","html_id":"new(status_code:Int32,message=&quot;&quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":"Int32"},{"name":"message","doc":null,"default_value":"\"\"","external_name":"message","restriction":""}],"args_string":"(status_code : Int32, message = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/error.cr#L9","def":{"name":"new","args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":"Int32"},{"name":"message","doc":null,"default_value":"\"\"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(status_code, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Auth","path":"Etcd/Auth.html","kind":"class","full_name":"Etcd::Auth","name":"Auth","abstract":false,"superclass":{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/auth.cr","line_number":1,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L1"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(api=Etcd::Api.new)-class-method","html_id":"new(api=Etcd::Api.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"api","doc":null,"default_value":"Etcd::Api.new","external_name":"api","restriction":""}],"args_string":"(api = <span class=\"t\">Etcd</span><span class=\"t\">::</span><span class=\"t\">Api</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L4","def":{"name":"new","args":[{"name":"api","doc":null,"default_value":"Etcd::Api.new","external_name":"api","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(api)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"authenticate-instance-method","html_id":"authenticate-instance-method","name":"authenticate","doc":"auth/authenticate","summary":"<p>auth/authenticate</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L8","def":{"name":"authenticate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"disable-instance-method","html_id":"disable-instance-method","name":"disable","doc":"auth/disable","summary":"<p>auth/disable</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L13","def":{"name":"disable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"enable-instance-method","html_id":"enable-instance-method","name":"enable","doc":"auth/enable","summary":"<p>auth/enable</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L18","def":{"name":"enable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"role_add-instance-method","html_id":"role_add-instance-method","name":"role_add","doc":"auth/role/add","summary":"<p>auth/role/add</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L23","def":{"name":"role_add","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"role_delete-instance-method","html_id":"role_delete-instance-method","name":"role_delete","doc":"auth/role/delete","summary":"<p>auth/role/delete</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L28","def":{"name":"role_delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"role_get-instance-method","html_id":"role_get-instance-method","name":"role_get","doc":"auth/role/get","summary":"<p>auth/role/get</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L33","def":{"name":"role_get","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"role_grant-instance-method","html_id":"role_grant-instance-method","name":"role_grant","doc":"auth/role/grant","summary":"<p>auth/role/grant</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L38","def":{"name":"role_grant","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"role_list-instance-method","html_id":"role_list-instance-method","name":"role_list","doc":"auth/role/list","summary":"<p>auth/role/list</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L43","def":{"name":"role_list","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"role_revoke-instance-method","html_id":"role_revoke-instance-method","name":"role_revoke","doc":"auth/role/revoke","summary":"<p>auth/role/revoke</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L48","def":{"name":"role_revoke","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"user_add-instance-method","html_id":"user_add-instance-method","name":"user_add","doc":"auth/user/add","summary":"<p>auth/user/add</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L53","def":{"name":"user_add","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"user_changepw-instance-method","html_id":"user_changepw-instance-method","name":"user_changepw","doc":"auth/user/changepw","summary":"<p>auth/user/changepw</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L58","def":{"name":"user_changepw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"user_delete-instance-method","html_id":"user_delete-instance-method","name":"user_delete","doc":"auth/user/delete","summary":"<p>auth/user/delete</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L63","def":{"name":"user_delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"user_get-instance-method","html_id":"user_get-instance-method","name":"user_get","doc":"auth/user/get","summary":"<p>auth/user/get</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L68","def":{"name":"user_get","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"user_grant-instance-method","html_id":"user_grant-instance-method","name":"user_grant","doc":"auth/user/grant","summary":"<p>auth/user/grant</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L73","def":{"name":"user_grant","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"user_list-instance-method","html_id":"user_list-instance-method","name":"user_list","doc":"auth/user/list","summary":"<p>auth/user/list</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L78","def":{"name":"user_list","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"user_revoke-instance-method","html_id":"user_revoke-instance-method","name":"user_revoke","doc":"auth/user/revoke","summary":"<p>auth/user/revoke</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/auth.cr#L83","def":{"name":"user_revoke","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Client","path":"Etcd/Client.html","kind":"class","full_name":"Etcd::Client","name":"Client","abstract":false,"superclass":{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/client.cr","line_number":6,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L6"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(url:URI,api_version:String?=nil)-class-method","html_id":"new(url:URI,api_version:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"URI"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"args_string":"(url : URI, api_version : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L12","def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"URI"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(url, api_version)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(host:String=&quot;localhost&quot;,port:Int32?=nil,api_version:String?=nil)-class-method","html_id":"new(host:String=&quot;localhost&quot;,port:Int32?=nil,api_version:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"\"localhost\"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"args_string":"(host : String = <span class=\"s\">&quot;localhost&quot;</span>, port : Int32? = <span class=\"n\">nil</span>, api_version : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L20","def":{"name":"new","args":[{"name":"host","doc":null,"default_value":"\"localhost\"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"api_version","doc":null,"default_value":"nil","external_name":"api_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host, port, api_version)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"api:Etcd::Api-instance-method","html_id":"api:Etcd::Api-instance-method","name":"api","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Etcd::Api","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L7","def":{"name":"api","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Etcd::Api","visibility":"Public","body":"@api"}},{"id":"api_version-instance-method","html_id":"api_version-instance-method","name":"api_version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L29","def":{"name":"api_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"api.api_version"}},{"id":"close(*args,**options)-instance-method","html_id":"close(*args,**options)-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L10","def":{"name":"close","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"api.connection.close(*args, **options)"}},{"id":"close(*args,**options,&)-instance-method","html_id":"close(*args,**options,&)-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L10","def":{"name":"close","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"api.connection.close(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"kv:Kv-instance-method","html_id":"kv:Kv-instance-method","name":"kv","doc":"Provide an object for managing kv. See `Docker::Kv`.","summary":"<p>Provide an object for managing kv.</p>","abstract":false,"args":[],"args_string":" : Kv","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L37","def":{"name":"kv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Kv","visibility":"Public","body":"@kv || (@kv = Kv.new(self))"}},{"id":"lease:Lease-instance-method","html_id":"lease:Lease-instance-method","name":"lease","doc":"Provide an object for managing lease. See `Docker::Lease`.","summary":"<p>Provide an object for managing lease.</p>","abstract":false,"args":[],"args_string":" : Lease","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L37","def":{"name":"lease","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Lease","visibility":"Public","body":"@lease || (@lease = Lease.new(self))"}},{"id":"maintenance:Maintenance-instance-method","html_id":"maintenance:Maintenance-instance-method","name":"maintenance","doc":"Provide an object for managing maintenance. See `Docker::Maintenance`.","summary":"<p>Provide an object for managing maintenance.</p>","abstract":false,"args":[],"args_string":" : Maintenance","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L37","def":{"name":"maintenance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Maintenance","visibility":"Public","body":"@maintenance || (@maintenance = Maintenance.new(self))"}},{"id":"spawn_api:Etcd::Api-instance-method","html_id":"spawn_api:Etcd::Api-instance-method","name":"spawn_api","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Etcd::Api","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L33","def":{"name":"spawn_api","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Etcd::Api","visibility":"Public","body":"create_api.call"}},{"id":"watch:Watch-instance-method","html_id":"watch:Watch-instance-method","name":"watch","doc":"Provide an object for managing watch. See `Docker::Watch`.","summary":"<p>Provide an object for managing watch.</p>","abstract":false,"args":[],"args_string":" : Watch","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/client.cr#L37","def":{"name":"watch","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Watch","visibility":"Public","body":"@watch || (@watch = Watch.new(self))"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Cluster","path":"Etcd/Cluster.html","kind":"module","full_name":"Etcd::Cluster","name":"Cluster","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/etcd/cluster.cr","line_number":1,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/cluster.cr#L1"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"member_add-instance-method","html_id":"member_add-instance-method","name":"member_add","doc":"POST cluster/member/add","summary":"<p>POST cluster/member/add</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/cluster.cr#L3","def":{"name":"member_add","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"member_list-instance-method","html_id":"member_list-instance-method","name":"member_list","doc":"POST cluster/member/list","summary":"<p>POST cluster/member/list</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/cluster.cr#L8","def":{"name":"member_list","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"member_promote-instance-method","html_id":"member_promote-instance-method","name":"member_promote","doc":"POST cluster/member/promote","summary":"<p>POST cluster/member/promote</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/cluster.cr#L13","def":{"name":"member_promote","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"member_remove-instance-method","html_id":"member_remove-instance-method","name":"member_remove","doc":"POST cluster/member/remove","summary":"<p>POST cluster/member/remove</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/cluster.cr#L18","def":{"name":"member_remove","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}},{"id":"member_update-instance-method","html_id":"member_update-instance-method","name":"member_update","doc":"POST cluster/member/update","summary":"<p>POST cluster/member/update</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/cluster.cr#L23","def":{"name":"member_update","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"unimplemented\")"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Error","path":"Etcd/Error.html","kind":"class","full_name":"Etcd::Error","name":"Error","abstract":false,"superclass":{"html_id":"etcd/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"etcd/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/error.cr","line_number":4,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/error.cr#L4"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"etcd/Etcd/ApiError","kind":"class","full_name":"Etcd::ApiError","name":"ApiError"},{"html_id":"etcd/Etcd/WatchError","kind":"class","full_name":"Etcd::WatchError","name":"WatchError"}],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"message:String?-instance-method","html_id":"message:String?-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/error.cr#L5","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@message"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Kv","path":"Etcd/Kv.html","kind":"class","full_name":"Etcd::Kv","name":"Kv","abstract":false,"superclass":{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"etcd/Etcd/Utils","kind":"module","full_name":"Etcd::Utils","name":"Utils"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/kv.cr","line_number":5,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L5"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)","doc":null,"summary":null}],"included_modules":[{"html_id":"etcd/Etcd/Utils","kind":"module","full_name":"Etcd::Utils","name":"Utils"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(client=Etcd::Client.new)-class-method","html_id":"new(client=Etcd::Client.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"client","doc":null,"default_value":"Etcd::Client.new","external_name":"client","restriction":""}],"args_string":"(client = <span class=\"t\">Etcd</span><span class=\"t\">::</span><span class=\"t\">Client</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L11","def":{"name":"new","args":[{"name":"client","doc":null,"default_value":"Etcd::Client.new","external_name":"client","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(client)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"compare_and_swap(key,value,previous_value,lease_id:Int64=0_i64):Bool-instance-method","html_id":"compare_and_swap(key,value,previous_value,lease_id:Int64=0_i64):Bool-instance-method","name":"compare_and_swap","doc":"Sets a `key` if the given `previous_value` matches the existing value for `key`\n\nWrapper over the etcd transaction API.","summary":"<p>Sets a <code>key</code> if the given <code>previous_value</code> matches the existing value for <code>key</code></p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"previous_value","doc":null,"default_value":"","external_name":"previous_value","restriction":""},{"name":"lease_id","doc":null,"default_value":"0_i64","external_name":"lease_id","restriction":"Int64"}],"args_string":"(key, value, previous_value, lease_id : Int64 = <span class=\"n\">0_i64</span>) : Bool","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L132","def":{"name":"compare_and_swap","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"previous_value","doc":null,"default_value":"","external_name":"previous_value","restriction":""},{"name":"lease_id","doc":null,"default_value":"0_i64","external_name":"lease_id","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"encoded_key = Base64.strict_encode(key)\nencoded_value = Base64.strict_encode(value.to_s)\nencoded_previous_value = Base64.strict_encode(previous_value.to_s)\npost_body = {:compare => [{:key => encoded_key, :value => encoded_previous_value, :target => \"VALUE\", :result => \"EQUAL\"}], :success => [{:request_put => {:key => encoded_key, :value => encoded_value, :lease => lease_id}}]}\n(Model::TxnResponse.from_json((client.api.post(\"/kv/txn\", post_body)).body)).succeeded\n"}},{"id":"delete(key,range_end:String?=nil,base64_keys:Bool=true)-instance-method","html_id":"delete(key,range_end:String?=nil,base64_keys:Bool=true)-instance-method","name":"delete","doc":"Deletes key or range of keys","summary":"<p>Deletes key or range of keys</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"range_end","doc":null,"default_value":"nil","external_name":"range_end","restriction":"String | ::Nil"},{"name":"base64_keys","doc":null,"default_value":"true","external_name":"base64_keys","restriction":"Bool"}],"args_string":"(key, range_end : String? = <span class=\"n\">nil</span>, base64_keys : Bool = <span class=\"n\">true</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L45","def":{"name":"delete","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"range_end","doc":null,"default_value":"nil","external_name":"range_end","restriction":"String | ::Nil"},{"name":"base64_keys","doc":null,"default_value":"true","external_name":"base64_keys","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if base64_keys\n  key = Base64.strict_encode(key)\n  range_end = range_end.try(&->Base64.strict_encode(String))\nend\npost_body = {:key => key, :range_end => range_end}.compact\nresponse = client.api.post(\"/kv/deleterange\", post_body)\nModel::DeleteResponse.from_json(response.body)\n"}},{"id":"delete_prefix(prefix)-instance-method","html_id":"delete_prefix(prefix)-instance-method","name":"delete_prefix","doc":"Deletes an entire keyspace prefix","summary":"<p>Deletes an entire keyspace prefix</p>","abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"args_string":"(prefix)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L62","def":{"name":"delete_prefix","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encoded_prefix = Base64.strict_encode(prefix)\nrange_end = prefix_range_end(encoded_prefix)\ndelete(encoded_prefix, range_end, base64_keys: false)\n"}},{"id":"get(key):String?-instance-method","html_id":"get(key):String?-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key) : String?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L155","def":{"name":"get","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"(range(key)).kvs.first?.try(&.value)"}},{"id":"put(key:String,value,lease:Int64=0_i64,prev_kv:Bool?=nil,ignore_value:Bool?=nil,ignore_lease:Bool?=nil)-instance-method","html_id":"put(key:String,value,lease:Int64=0_i64,prev_kv:Bool?=nil,ignore_value:Bool?=nil,ignore_lease:Bool?=nil)-instance-method","name":"put","doc":"Sets a key and value in etcd.\nkey             key is the string that will be base64 encoded and associated with value in the kv store                          String\nvalue           value is the string that will be base64 encoded and associated with key in the kv store                          String\nopts\n  lease         lease is the lease ID to associate with the key in the key-value store. A lease value of 0 indicates no lease.   Int64\n  prev_kv       If prev_kv is set, etcd gets the previous key-value pair before changing it.\n                The previous key-value pair will be returned in the put response.                                                 Bool\n  ignore_value  If ignore_value is set, etcd updates the key using its current value. Returns an error if the key does not exist  Bool\n  ignore_lease  If ignore_lease is set, etcd updates the key using its current lease. Returns an error if the key does not exist  Bool","summary":"<p>Sets a key and value in etcd.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"lease","doc":null,"default_value":"0_i64","external_name":"lease","restriction":"Int64"},{"name":"prev_kv","doc":null,"default_value":"nil","external_name":"prev_kv","restriction":"Bool | ::Nil"},{"name":"ignore_value","doc":null,"default_value":"nil","external_name":"ignore_value","restriction":"Bool | ::Nil"},{"name":"ignore_lease","doc":null,"default_value":"nil","external_name":"ignore_lease","restriction":"Bool | ::Nil"}],"args_string":"(key : String, value, lease : Int64 = <span class=\"n\">0_i64</span>, prev_kv : Bool? = <span class=\"n\">nil</span>, ignore_value : Bool? = <span class=\"n\">nil</span>, ignore_lease : Bool? = <span class=\"n\">nil</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L23","def":{"name":"put","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"lease","doc":null,"default_value":"0_i64","external_name":"lease","restriction":"Int64"},{"name":"prev_kv","doc":null,"default_value":"nil","external_name":"prev_kv","restriction":"Bool | ::Nil"},{"name":"ignore_value","doc":null,"default_value":"nil","external_name":"ignore_value","restriction":"Bool | ::Nil"},{"name":"ignore_lease","doc":null,"default_value":"nil","external_name":"ignore_lease","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"options = {:key => Base64.strict_encode(key), :value => Base64.strict_encode(value.to_s), :lease => lease, :prev_kv => prev_kv, :ignore_value => ignore_value, :ignore_lease => ignore_lease}.compact\nresponse = client.api.post(\"/kv/put\", options)\nModel::PutResponse.from_json(response.body)\n"}},{"id":"put_not_exists(key:String,value,lease:Int64=0_i64):Bool-instance-method","html_id":"put_not_exists(key:String,value,lease:Int64=0_i64):Bool-instance-method","name":"put_not_exists","doc":"Sets a key if the key is not already present.\n\nWrapper over the etcd transaction API.","summary":"<p>Sets a key if the key is not already present.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"lease","doc":null,"default_value":"0_i64","external_name":"lease","restriction":"Int64"}],"args_string":"(key : String, value, lease : Int64 = <span class=\"n\">0_i64</span>) : Bool","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L105","def":{"name":"put_not_exists","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"lease","doc":null,"default_value":"0_i64","external_name":"lease","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"key = Base64.strict_encode(key)\nvalue = Base64.strict_encode(value.to_s)\npost_body = {:compare => [{:key => key, :value => Base64.strict_encode(\"0\"), :target => \"VERSION\", :result => \"EQUAL\"}], :success => [{:request_put => {:key => key, :value => value, :lease => lease, :ignore_lease => false}}]}\nresponse = client.api.post(\"/kv/txn\", post_body)\n(Model::TxnResponse.from_json(response.body)).succeeded\n"}},{"id":"range(key,range_end:String?=nil,base64_keys:Bool=true)-instance-method","html_id":"range(key,range_end:String?=nil,base64_keys:Bool=true)-instance-method","name":"range","doc":"Queries a range of keys","summary":"<p>Queries a range of keys</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"range_end","doc":null,"default_value":"nil","external_name":"range_end","restriction":"String | ::Nil"},{"name":"base64_keys","doc":null,"default_value":"true","external_name":"base64_keys","restriction":"Bool"}],"args_string":"(key, range_end : String? = <span class=\"n\">nil</span>, base64_keys : Bool = <span class=\"n\">true</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L69","def":{"name":"range","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"range_end","doc":null,"default_value":"nil","external_name":"range_end","restriction":"String | ::Nil"},{"name":"base64_keys","doc":null,"default_value":"true","external_name":"base64_keys","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if base64_keys\n  key = Base64.strict_encode(key)\n  range_end = range_end.try(&->Base64.strict_encode(String))\nend\npost_body = {:key => key, :range_end => range_end}.compact\nresponse = client.api.post(\"/kv/range\", post_body)\nModel::RangeResponse.from_json(response.body)\n"}},{"id":"range_greater_than_or_equal(key)-instance-method","html_id":"range_greater_than_or_equal(key)-instance-method","name":"range_greater_than_or_equal","doc":"Query all keys >= key","summary":"<p>Query all keys >= key</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L93","def":{"name":"range_greater_than_or_equal","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encoded_key = Base64.strict_encode(key)\nrange_end = \"\\u0000\"\nrange(encoded_key, range_end, base64_keys: false)\n"}},{"id":"range_prefix(prefix)-instance-method","html_id":"range_prefix(prefix)-instance-method","name":"range_prefix","doc":"Query keys beneath a prefix","summary":"<p>Query keys beneath a prefix</p>","abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"args_string":"(prefix)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/kv.cr#L86","def":{"name":"range_prefix","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encoded_prefix = Base64.strict_encode(prefix)\nrange_end = prefix_range_end(encoded_prefix)\nrange(encoded_prefix, range_end, base64_keys: false)\n"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Lease","path":"Etcd/Lease.html","kind":"class","full_name":"Etcd::Lease","name":"Lease","abstract":false,"superclass":{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/lease.cr","line_number":1,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/lease.cr#L1"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(client=Etcd::Client.new)-class-method","html_id":"new(client=Etcd::Client.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"client","doc":null,"default_value":"Etcd::Client.new","external_name":"client","restriction":""}],"args_string":"(client = <span class=\"t\">Etcd</span><span class=\"t\">::</span><span class=\"t\">Client</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/lease.cr#L4","def":{"name":"new","args":[{"name":"client","doc":null,"default_value":"Etcd::Client.new","external_name":"client","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(client)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"grant(ttl:Int64=@ttl,id=0)-instance-method","html_id":"grant(ttl:Int64=@ttl,id=0)-instance-method","name":"grant","doc":"Requests a lease\nttl   ttl of granted lease                            Int64\nid    id of 0 prompts etcd to assign any id to lease  UInt64","summary":"<p>Requests a lease ttl   ttl of granted lease                            Int64 id    id of 0 prompts etcd to assign any id to lease  UInt64</p>","abstract":false,"args":[{"name":"ttl","doc":null,"default_value":"@ttl","external_name":"ttl","restriction":"Int64"},{"name":"id","doc":null,"default_value":"0","external_name":"id","restriction":""}],"args_string":"(ttl : Int64 = @ttl, id = <span class=\"n\">0</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/lease.cr#L10","def":{"name":"grant","args":[{"name":"ttl","doc":null,"default_value":"@ttl","external_name":"ttl","restriction":"Int64"},{"name":"id","doc":null,"default_value":"0","external_name":"id","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = client.api.post(\"/lease/grant\", {TTL: ttl, ID: 0})\nbody = JSON.parse(response.body)\n{id: body[\"ID\"].to_s.to_i64, ttl: body[\"TTL\"].to_s.to_i64}\n"}},{"id":"keep_alive(id:Int64)-instance-method","html_id":"keep_alive(id:Int64)-instance-method","name":"keep_alive","doc":"Requests persistence of lease.\nMust be invoked periodically to avoid key loss.","summary":"<p>Requests persistence of lease.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int64"}],"args_string":"(id : Int64)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/lease.cr#L22","def":{"name":"keep_alive","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = client.api.post(\"/lease/keepalive\", {ID: id})\nbody = JSON.parse(response.body)\nbody[\"result\"][\"TTL\"]?.try do |__arg0|\n  __arg0.to_s.to_i64\nend\n"}},{"id":"leases-instance-method","html_id":"leases-instance-method","name":"leases","doc":"Queries for all existing leases in an etcd cluster","summary":"<p>Queries for all existing leases in an etcd cluster</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/lease.cr#L51","def":{"name":"leases","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response_body = (client.api.post(\"/kv/lease/leases\")).body\nbody = JSON.parse(response_body)\nbody[\"leases\"].as_a.map do |l|\n  l[\"ID\"].as_s.to_i64\nend\n"}},{"id":"revoke(id:Int64)-instance-method","html_id":"revoke(id:Int64)-instance-method","name":"revoke","doc":"Revokes an etcd lease\nid  Id of lease  Int64","summary":"<p>Revokes an etcd lease id  Id of lease  Int64</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int64"}],"args_string":"(id : Int64)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/lease.cr#L44","def":{"name":"revoke","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = client.api.post(\"/kv/lease/revoke\", {ID: id})\nresponse.success?\n"}},{"id":"timetolive(id:Int64,query_keys=false)-instance-method","html_id":"timetolive(id:Int64,query_keys=false)-instance-method","name":"timetolive","doc":"Queries the TTL of a lease\nid            id of lease                         Int64\nquery_keys    query all the lease's keys for ttl  Bool","summary":"<p>Queries the TTL of a lease id            id of lease                         Int64 query_keys    query all the lease's keys for ttl  Bool</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int64"},{"name":"query_keys","doc":null,"default_value":"false","external_name":"query_keys","restriction":""}],"args_string":"(id : Int64, query_keys = <span class=\"n\">false</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/lease.cr#L32","def":{"name":"timetolive","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int64"},{"name":"query_keys","doc":null,"default_value":"false","external_name":"query_keys","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = client.api.post(\"/kv/lease/timetolive\", {ID: id, keys: query_keys})\nbody = JSON.parse(response.body)\n{granted_ttl: body[\"grantedTTL\"].to_s.to_i64, ttl: body[\"TTL\"].to_s.to_i64}\n"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Maintenance","path":"Etcd/Maintenance.html","kind":"class","full_name":"Etcd::Maintenance","name":"Maintenance","abstract":false,"superclass":{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/maintenance.cr","line_number":3,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/maintenance.cr#L3"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(client=Etcd::Client.new)-class-method","html_id":"new(client=Etcd::Client.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"client","doc":null,"default_value":"Etcd::Client.new","external_name":"client","restriction":""}],"args_string":"(client = <span class=\"t\">Etcd</span><span class=\"t\">::</span><span class=\"t\">Client</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/maintenance.cr#L6","def":{"name":"new","args":[{"name":"client","doc":null,"default_value":"Etcd::Client.new","external_name":"client","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(client)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"leader-instance-method","html_id":"leader-instance-method","name":"leader","doc":"Queries for current leader of the etcd cluster","summary":"<p>Queries for current leader of the etcd cluster</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/maintenance.cr#L16","def":{"name":"leader","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status.leader"}},{"id":"status-instance-method","html_id":"status-instance-method","name":"status","doc":"Queries status of etcd instance","summary":"<p>Queries status of etcd instance</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/maintenance.cr#L10","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response_body = (client.api.post(\"/maintenance/status\")).body\nModel::Status.from_json(response_body)\n"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Model","path":"Etcd/Model.html","kind":"module","full_name":"Etcd::Model","name":"Model","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/etcd/model/base.cr","line_number":5,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L5"},{"filename":"src/etcd/model/kv.cr","line_number":3,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L3"},{"filename":"src/etcd/model/maintenance.cr","line_number":3,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/maintenance.cr#L3"},{"filename":"src/etcd/model/watch.cr","line_number":4,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L4"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":"Etcd data models\nRefer to documentation https://coreos.com/etcd/docs/latest/dev-guide/api_reference_v3.html","summary":"<p>Etcd data models Refer to documentation https://coreos.com/etcd/docs/latest/dev-guide/api_reference_v3.html</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"etcd/Etcd/Model/Base64Converter","path":"Etcd/Model/Base64Converter.html","kind":"module","full_name":"Etcd::Model::Base64Converter","name":"Base64Converter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/etcd/model/base.cr","line_number":22,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L22"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":"Converter for Base64 encoded values","summary":"<p>Converter for Base64 encoded values</p>","class_methods":[{"id":"from_json(json:JSON::PullParser):String-class-method","html_id":"from_json(json:JSON::PullParser):String-class-method","name":"from_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::PullParser"}],"args_string":"(json : JSON::PullParser) : String","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L23","def":{"name":"from_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"Base64.decode_string(json.read_string)"}},{"id":"to_json(value:String,json:JSON::Builder)-class-method","html_id":"to_json(value:String,json:JSON::Builder)-class-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(value : String, json : JSON::Builder)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L27","def":{"name":"to_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(Base64.strict_encode(value))"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Model/DeleteResponse","path":"Etcd/Model/DeleteResponse.html","kind":"class","full_name":"Etcd::Model::DeleteResponse","name":"DeleteResponse","abstract":false,"superclass":{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},"ancestors":[{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},{"html_id":"etcd/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/kv.cr","line_number":31,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L31"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L31","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"id":"deleted:Int32-instance-method","html_id":"deleted:Int32-instance-method","name":"deleted","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L34","def":{"name":"deleted","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@deleted"}},{"id":"header:Header-instance-method","html_id":"header:Header-instance-method","name":"header","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Header","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L32","def":{"name":"header","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Header","visibility":"Public","body":"@header"}},{"id":"prev_kvs:Array(Etcd::Model::Kv)-instance-method","html_id":"prev_kvs:Array(Etcd::Model::Kv)-instance-method","name":"prev_kvs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Etcd::Model::Kv)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L35","def":{"name":"prev_kvs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Etcd::Model::Kv)","visibility":"Public","body":"@prev_kvs"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Model/Header","path":"Etcd/Model/Header.html","kind":"class","full_name":"Etcd::Model::Header","name":"Header","abstract":false,"superclass":{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},"ancestors":[{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},{"html_id":"etcd/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/base.cr","line_number":10,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L10"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L10","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"id":"cluster_id:UInt64?-instance-method","html_id":"cluster_id:UInt64?-instance-method","name":"cluster_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L12","def":{"name":"cluster_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64 | ::Nil","visibility":"Public","body":"@cluster_id"}},{"id":"member_id:UInt64?-instance-method","html_id":"member_id:UInt64?-instance-method","name":"member_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L14","def":{"name":"member_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64 | ::Nil","visibility":"Public","body":"@member_id"}},{"id":"raft_term:UInt64?-instance-method","html_id":"raft_term:UInt64?-instance-method","name":"raft_term","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L18","def":{"name":"raft_term","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64 | ::Nil","visibility":"Public","body":"@raft_term"}},{"id":"revision:Int64-instance-method","html_id":"revision:Int64-instance-method","name":"revision","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L16","def":{"name":"revision","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@revision"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Model/Kv","path":"Etcd/Model/Kv.html","kind":"class","full_name":"Etcd::Model::Kv","name":"Kv","abstract":false,"superclass":{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},"ancestors":[{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},{"html_id":"etcd/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/kv.cr","line_number":4,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L4"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L4","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"id":"create_revision:UInt64?-instance-method","html_id":"create_revision:UInt64?-instance-method","name":"create_revision","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L10","def":{"name":"create_revision","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64 | ::Nil","visibility":"Public","body":"@create_revision"}},{"id":"key:String-instance-method","html_id":"key:String-instance-method","name":"key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L6","def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@key"}},{"id":"lease:Int64?-instance-method","html_id":"lease:Int64?-instance-method","name":"lease","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L16","def":{"name":"lease","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"@lease"}},{"id":"mod_revision:UInt64?-instance-method","html_id":"mod_revision:UInt64?-instance-method","name":"mod_revision","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L12","def":{"name":"mod_revision","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64 | ::Nil","visibility":"Public","body":"@mod_revision"}},{"id":"value:String?-instance-method","html_id":"value:String?-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L8","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@value"}},{"id":"version:Int64?-instance-method","html_id":"version:Int64?-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L14","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"@version"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Model/PutResponse","path":"Etcd/Model/PutResponse.html","kind":"class","full_name":"Etcd::Model::PutResponse","name":"PutResponse","abstract":false,"superclass":{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},"ancestors":[{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},{"html_id":"etcd/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/kv.cr","line_number":26,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L26"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L26","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"id":"header:Header-instance-method","html_id":"header:Header-instance-method","name":"header","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Header","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L27","def":{"name":"header","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Header","visibility":"Public","body":"@header"}},{"id":"prev_kv:Kv?-instance-method","html_id":"prev_kv:Kv?-instance-method","name":"prev_kv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Kv?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L28","def":{"name":"prev_kv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Kv | ::Nil","visibility":"Public","body":"@prev_kv"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Model/RangeResponse","path":"Etcd/Model/RangeResponse.html","kind":"class","full_name":"Etcd::Model::RangeResponse","name":"RangeResponse","abstract":false,"superclass":{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},"ancestors":[{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},{"html_id":"etcd/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/kv.cr","line_number":19,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L19"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L19","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"id":"count:Int32-instance-method","html_id":"count:Int32-instance-method","name":"count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L22","def":{"name":"count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@count"}},{"id":"header:Header?-instance-method","html_id":"header:Header?-instance-method","name":"header","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Header?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L20","def":{"name":"header","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Header | ::Nil","visibility":"Public","body":"@header"}},{"id":"kvs:Array(Etcd::Model::Kv)-instance-method","html_id":"kvs:Array(Etcd::Model::Kv)-instance-method","name":"kvs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Etcd::Model::Kv)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L23","def":{"name":"kvs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Etcd::Model::Kv)","visibility":"Public","body":"@kvs"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Model/Status","path":"Etcd/Model/Status.html","kind":"class","full_name":"Etcd::Model::Status","name":"Status","abstract":false,"superclass":{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},"ancestors":[{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},{"html_id":"etcd/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/maintenance.cr","line_number":4,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/maintenance.cr#L4"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/maintenance.cr#L4","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"id":"db_size:Int64-instance-method","html_id":"db_size:Int64-instance-method","name":"db_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/maintenance.cr#L8","def":{"name":"db_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@db_size"}},{"id":"header:Header-instance-method","html_id":"header:Header-instance-method","name":"header","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Header","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/maintenance.cr#L5","def":{"name":"header","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Header","visibility":"Public","body":"@header"}},{"id":"leader:UInt64-instance-method","html_id":"leader:UInt64-instance-method","name":"leader","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/maintenance.cr#L10","def":{"name":"leader","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@leader"}},{"id":"raft_index:UInt64-instance-method","html_id":"raft_index:UInt64-instance-method","name":"raft_index","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/maintenance.cr#L12","def":{"name":"raft_index","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@raft_index"}},{"id":"raft_term:UInt64-instance-method","html_id":"raft_term:UInt64-instance-method","name":"raft_term","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/maintenance.cr#L14","def":{"name":"raft_term","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@raft_term"}},{"id":"version:String-instance-method","html_id":"version:String-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/maintenance.cr#L6","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@version"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Model/StringTypeConverter","path":"Etcd/Model/StringTypeConverter.html","kind":"module","full_name":"Etcd::Model::StringTypeConverter(T)","name":"StringTypeConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/etcd/model/base.cr","line_number":33,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L33"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":"Converter for stringly typed values, such as etcd response values","summary":"<p>Converter for stringly typed values, such as etcd response values</p>","class_methods":[{"id":"from_json(json:JSON::PullParser):T-class-method","html_id":"from_json(json:JSON::PullParser):T-class-method","name":"from_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::PullParser"}],"args_string":"(json : JSON::PullParser) : T","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L34","def":{"name":"from_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"T.new(json.read_string)"}},{"id":"to_json(value:T,json:JSON::Builder)-class-method","html_id":"to_json(value:T,json:JSON::Builder)-class-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(value : T, json : JSON::Builder)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/base.cr#L38","def":{"name":"to_json","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(value.to_s)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Model/TxnResponse","path":"Etcd/Model/TxnResponse.html","kind":"class","full_name":"Etcd::Model::TxnResponse","name":"TxnResponse","abstract":false,"superclass":{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},"ancestors":[{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},{"html_id":"etcd/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/kv.cr","line_number":38,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L38"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L38","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"id":"header:Header-instance-method","html_id":"header:Header-instance-method","name":"header","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Header","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L39","def":{"name":"header","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Header","visibility":"Public","body":"@header"}},{"id":"responses:Array(Etcd::Model::TxnResponse::Response)-instance-method","html_id":"responses:Array(Etcd::Model::TxnResponse::Response)-instance-method","name":"responses","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Etcd::Model::TxnResponse::Response)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L47","def":{"name":"responses","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Etcd::Model::TxnResponse::Response)","visibility":"Public","body":"@responses"}},{"id":"succeeded:Bool-instance-method","html_id":"succeeded:Bool-instance-method","name":"succeeded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L40","def":{"name":"succeeded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@succeeded"}}],"macros":[],"types":[{"html_id":"etcd/Etcd/Model/TxnResponse/Response","path":"Etcd/Model/TxnResponse/Response.html","kind":"alias","full_name":"Etcd::Model::TxnResponse::Response","name":"Response","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/etcd/model/kv.cr","line_number":42,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/kv.cr#L42"}],"repository_name":"etcd","program":false,"enum":false,"alias":true,"aliased":"NamedTuple(response_range: Etcd::Model::RangeResponse | Nil, response_put: Etcd::Model::PutResponse | Nil, response_delete: Etcd::Model::DeleteResponse | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model/TxnResponse","kind":"class","full_name":"Etcd::Model::TxnResponse","name":"TxnResponse"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"etcd/Etcd/Model/WatchError","path":"Etcd/Model/WatchError.html","kind":"class","full_name":"Etcd::Model::WatchError","name":"WatchError","abstract":false,"superclass":{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},"ancestors":[{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},{"html_id":"etcd/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/watch.cr","line_number":11,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L11"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L11","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"id":"http_code:Int32-instance-method","html_id":"http_code:Int32-instance-method","name":"http_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L12","def":{"name":"http_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@http_code"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Model/WatchEvent","path":"Etcd/Model/WatchEvent.html","kind":"class","full_name":"Etcd::Model::WatchEvent","name":"WatchEvent","abstract":false,"superclass":{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},"ancestors":[{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},{"html_id":"etcd/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/watch.cr","line_number":22,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L22"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L22","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"id":"kv:Kv-instance-method","html_id":"kv:Kv-instance-method","name":"kv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Kv","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L30","def":{"name":"kv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Kv","visibility":"Public","body":"@kv"}},{"id":"type:Etcd::Model::WatchEvent::Type-instance-method","html_id":"type:Etcd::Model::WatchEvent::Type-instance-method","name":"type","doc":"Empty type field indicates PUT event","summary":"<p>Empty type field indicates PUT event</p>","abstract":false,"args":[],"args_string":" : Etcd::Model::WatchEvent::Type","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L29","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Etcd::Model::WatchEvent::Type","visibility":"Public","body":"@type"}}],"macros":[],"types":[{"html_id":"etcd/Etcd/Model/WatchEvent/Type","path":"Etcd/Model/WatchEvent/Type.html","kind":"enum","full_name":"Etcd::Model::WatchEvent::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[{"html_id":"etcd/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"etcd/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"etcd/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/watch.cr","line_number":23,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L23"}],"repository_name":"etcd","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"PUT","name":"PUT","value":"0","doc":null,"summary":null},{"id":"DELETE","name":"DELETE","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model/WatchEvent","kind":"class","full_name":"Etcd::Model::WatchEvent","name":"WatchEvent"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"delete?-instance-method","html_id":"delete?-instance-method","name":"delete?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L25","def":{"name":"delete?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DELETE"}},{"id":"put?-instance-method","html_id":"put?-instance-method","name":"put?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L24","def":{"name":"put?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PUT"}}],"macros":[],"types":[]}]},{"html_id":"etcd/Etcd/Model/WatchResponse","path":"Etcd/Model/WatchResponse.html","kind":"class","full_name":"Etcd::Model::WatchResponse","name":"WatchResponse","abstract":false,"superclass":{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},"ancestors":[{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},{"html_id":"etcd/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/watch.cr","line_number":5,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L5"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L5","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"id":"created:Bool-instance-method","html_id":"created:Bool-instance-method","name":"created","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L8","def":{"name":"created","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@created"}},{"id":"error:WatchError?-instance-method","html_id":"error:WatchError?-instance-method","name":"error","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : WatchError?","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L7","def":{"name":"error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"WatchError | ::Nil","visibility":"Public","body":"@error"}},{"id":"result:WatchResult-instance-method","html_id":"result:WatchResult-instance-method","name":"result","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : WatchResult","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L6","def":{"name":"result","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"WatchResult","visibility":"Public","body":"@result"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Model/WatchResult","path":"Etcd/Model/WatchResult.html","kind":"class","full_name":"Etcd::Model::WatchResult","name":"WatchResult","abstract":false,"superclass":{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},"ancestors":[{"html_id":"etcd/Etcd/Model/Base","kind":"class","full_name":"Etcd::Model::Base","name":"Base"},{"html_id":"etcd/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/model/watch.cr","line_number":15,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L15"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Model","kind":"module","full_name":"Etcd::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L15","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"id":"new(events=[]ofEtcd::Model::WatchEvent)-class-method","html_id":"new(events=[]ofEtcd::Model::WatchEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"events","doc":null,"default_value":"[] of Etcd::Model::WatchEvent","external_name":"events","restriction":""}],"args_string":"(events = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Etcd</span><span class=\"t\">::</span><span class=\"t\">Model</span><span class=\"t\">::</span><span class=\"t\">WatchEvent</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L18","def":{"name":"new","args":[{"name":"events","doc":null,"default_value":"[] of Etcd::Model::WatchEvent","external_name":"events","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(events)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"events:Array(Etcd::Model::WatchEvent)-instance-method","html_id":"events:Array(Etcd::Model::WatchEvent)-instance-method","name":"events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Etcd::Model::WatchEvent)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/model/watch.cr#L16","def":{"name":"events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Etcd::Model::WatchEvent)","visibility":"Public","body":"@events"}}],"macros":[],"types":[]}]},{"html_id":"etcd/Etcd/Utils","path":"Etcd/Utils.html","kind":"module","full_name":"Etcd::Utils","name":"Utils","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/etcd/utils.cr","line_number":1,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/utils.cr#L1"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"etcd/Etcd/Kv","kind":"class","full_name":"Etcd::Kv","name":"Kv"},{"html_id":"etcd/Etcd/Watch","kind":"class","full_name":"Etcd::Watch","name":"Watch"}],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"prefix_range_end(prefix)-instance-method","html_id":"prefix_range_end(prefix)-instance-method","name":"prefix_range_end","doc":"Calculate range_end for given prefix","summary":"<p>Calculate range_end for given prefix</p>","abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"args_string":"(prefix)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/utils.cr#L3","def":{"name":"prefix_range_end","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"bytes = Base64.decode(prefix)\nsize = bytes.size\ncarry = false\nsize.times do |offset|\n  index = (size - 1) - offset\n  if (offset == 0) || carry\n    __temp_52 = index\n    bytes[__temp_52] = bytes[__temp_52] + 1\n    carry = bytes[index] == UInt8::MIN\n  else\n    break\n  end\nend\nBase64.strict_encode(bytes)\n"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Watch","path":"Etcd/Watch.html","kind":"class","full_name":"Etcd::Watch","name":"Watch","abstract":false,"superclass":{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"etcd/Etcd/Utils","kind":"module","full_name":"Etcd::Utils","name":"Utils"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/watch.cr","line_number":7,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L7"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"etcd/Etcd/Utils","kind":"module","full_name":"Etcd::Utils","name":"Utils"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(client=Etcd::Client.new)-class-method","html_id":"new(client=Etcd::Client.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"client","doc":null,"default_value":"Etcd::Client.new","external_name":"client","restriction":""}],"args_string":"(client = <span class=\"t\">Etcd</span><span class=\"t\">::</span><span class=\"t\">Client</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L18","def":{"name":"new","args":[{"name":"client","doc":null,"default_value":"Etcd::Client.new","external_name":"client","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(client)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"watch(key,range_end:String?=nil,filters:Array(Watch::Filter)?=nil,start_revision:Int64?=nil,progress_notify:Bool?=nil,base64_keys:Bool=true,&block:Array(Model::WatchEvent)->Void):Watcher-instance-method","html_id":"watch(key,range_end:String?=nil,filters:Array(Watch::Filter)?=nil,start_revision:Int64?=nil,progress_notify:Bool?=nil,base64_keys:Bool=true,&block:Array(Model::WatchEvent)->Void):Watcher-instance-method","name":"watch","doc":"Watch a key in ETCD, returns a `Etcd::Watcher`\nExposes a synchronous interface to the watch session via `Etcd::Watcher`\n\nopts\n range_end       range_end is the end of the range [key, range_end) to watch.\n filters         filter the events at server side before it sends back to the watcher.                                           [Watch::Filter]\n start_revision  start_revision is an optional revision to watch from (inclusive). No start_revision is \"now\".                           Int64\n progress_notify progress_notify is set so that the etcd server will periodically send a WatchResponse with no events to the new watcher\n                 if there are no recent events. It is useful when clients wish to recover a disconnected watcher starting from\n                 a recent known revision. The etcd server may decide how often it will send notifications based on current load.         Bool\n prev_kv         If prev_kv is set, created watcher gets the previous Kv before the event happens.                                       Bool","summary":"<p>Watch a key in ETCD, returns a <code>Etcd::Watcher</code> Exposes a synchronous interface to the watch session via <code>Etcd::Watcher</code></p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"range_end","doc":null,"default_value":"nil","external_name":"range_end","restriction":"String | ::Nil"},{"name":"filters","doc":null,"default_value":"nil","external_name":"filters","restriction":"Array(Watch::Filter) | ::Nil"},{"name":"start_revision","doc":null,"default_value":"nil","external_name":"start_revision","restriction":"Int64 | ::Nil"},{"name":"progress_notify","doc":null,"default_value":"nil","external_name":"progress_notify","restriction":"Bool | ::Nil"},{"name":"base64_keys","doc":null,"default_value":"true","external_name":"base64_keys","restriction":"Bool"}],"args_string":"(key, range_end : String? = <span class=\"n\">nil</span>, filters : Array(Watch::Filter)? = <span class=\"n\">nil</span>, start_revision : Int64? = <span class=\"n\">nil</span>, progress_notify : Bool? = <span class=\"n\">nil</span>, base64_keys : Bool = <span class=\"n\">true</span>, &block : Array(Model::WatchEvent) -> Void) : Watcher","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L48","def":{"name":"watch","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"range_end","doc":null,"default_value":"nil","external_name":"range_end","restriction":"String | ::Nil"},{"name":"filters","doc":null,"default_value":"nil","external_name":"filters","restriction":"Array(Watch::Filter) | ::Nil"},{"name":"start_revision","doc":null,"default_value":"nil","external_name":"start_revision","restriction":"Int64 | ::Nil"},{"name":"progress_notify","doc":null,"default_value":"nil","external_name":"progress_notify","restriction":"Bool | ::Nil"},{"name":"base64_keys","doc":null,"default_value":"true","external_name":"base64_keys","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Array(Model::WatchEvent) -> Void)"},"return_type":"Watcher","visibility":"Public","body":"if base64_keys\n  key = Base64.strict_encode(key)\n  range_end = range_end.try(&->Base64.strict_encode(String))\nend\nWatcher.new(key: key, create_api: ->@client.spawn_api, range_end: range_end, filters: filters, start_revision: start_revision, progress_notify: progress_notify, &block)\n"}},{"id":"watch_prefix(prefix,**opts,&block:Array(Model::WatchEvent)->Void)-instance-method","html_id":"watch_prefix(prefix,**opts,&block:Array(Model::WatchEvent)->Void)-instance-method","name":"watch_prefix","doc":"Watches keys by prefix, passing events to a supplied block.\nExposes a synchronous interface to the watch session via `Etcd::Watcher`\n\nopts\n filters         filters filter the events at server side before it sends back to the watcher.                                           [Watch::Filter]\n start_revision  start_revision is an optional revision to watch from (inclusive). No start_revision is \"now\".                           Int64\n progress_notify progress_notify is set so that the etcd server will periodically send a WatchResponse with no events to the new watcher\n                 if there are no recent events. It is useful when clients wish to recover a disconnected watcher starting from\n                 a recent known revision. The etcd server may decide how often it will send notifications based on current load.         Bool\n prev_kv         If prev_kv is set, created watcher gets the previous Kv before the event happens.                                       Bool","summary":"<p>Watches keys by prefix, passing events to a supplied block.</p>","abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"args_string":"(prefix, **opts, &block : Array(Model::WatchEvent) -> Void)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L31","def":{"name":"watch_prefix","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"double_splat":{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Array(Model::WatchEvent) -> Void)"},"return_type":"","visibility":"Public","body":"encoded_prefix = Base64.strict_encode(prefix)\nopts = opts.merge({range_end: prefix_range_end(encoded_prefix), base64_keys: false})\nwatch(encoded_prefix, **opts, &block)\n"}}],"macros":[],"types":[{"html_id":"etcd/Etcd/Watch/Filter","path":"Etcd/Watch/Filter.html","kind":"enum","full_name":"Etcd::Watch::Filter","name":"Filter","abstract":false,"superclass":null,"ancestors":[{"html_id":"etcd/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"etcd/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"etcd/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/watch.cr","line_number":11,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L11"}],"repository_name":"etcd","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOPUT","name":"NOPUT","value":"0","doc":null,"summary":null},{"id":"NODELETE","name":"NODELETE","value":"1","doc":"filter put events","summary":"<p>filter put events</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Watch","kind":"class","full_name":"Etcd::Watch","name":"Watch"},"doc":"Types for watch event filters","summary":"<p>Types for watch event filters</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"nodelete?-instance-method","html_id":"nodelete?-instance-method","name":"nodelete?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L13","def":{"name":"nodelete?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NODELETE"}},{"id":"noput?-instance-method","html_id":"noput?-instance-method","name":"noput?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L12","def":{"name":"noput?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NOPUT"}}],"macros":[],"types":[]},{"html_id":"etcd/Etcd/Watch/Watcher","path":"Etcd/Watch/Watcher.html","kind":"class","full_name":"Etcd::Watch::Watcher","name":"Watcher","abstract":false,"superclass":{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/watch.cr","line_number":84,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L84"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd/Watch","kind":"class","full_name":"Etcd::Watch","name":"Watch"},"doc":"Wrapper for a watch session with etcd.\n\n```\nclient = Etcd::Client.new\nwatcher = client.watch(key: \"hello\") do |e|\n  # This block will be called upon each etcd event\n  puts e\nend\n\nspawn { watcher.start }\n```","summary":"<p>Wrapper for a watch session with etcd.</p>","class_methods":[],"constructors":[{"id":"new(key,create_api=->Etcd::Api.new,range_end=nil,filters=nil,start_revision=nil,progress_notify=nil,&block:Array(Model::WatchEvent)->Void)-class-method","html_id":"new(key,create_api=->Etcd::Api.new,range_end=nil,filters=nil,start_revision=nil,progress_notify=nil,&block:Array(Model::WatchEvent)->Void)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"create_api","doc":null,"default_value":"->Etcd::Api.new","external_name":"create_api","restriction":""},{"name":"range_end","doc":null,"default_value":"nil","external_name":"range_end","restriction":""},{"name":"filters","doc":null,"default_value":"nil","external_name":"filters","restriction":""},{"name":"start_revision","doc":null,"default_value":"nil","external_name":"start_revision","restriction":""},{"name":"progress_notify","doc":null,"default_value":"nil","external_name":"progress_notify","restriction":""}],"args_string":"(key, create_api = -><span class=\"t\">Etcd</span><span class=\"t\">::</span><span class=\"t\">Api</span>.<span class=\"k\">new</span>, range_end = <span class=\"n\">nil</span>, filters = <span class=\"n\">nil</span>, start_revision = <span class=\"n\">nil</span>, progress_notify = <span class=\"n\">nil</span>, &block : Array(Model::WatchEvent) -> Void)","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L98","def":{"name":"new","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"create_api","doc":null,"default_value":"->Etcd::Api.new","external_name":"create_api","restriction":""},{"name":"range_end","doc":null,"default_value":"nil","external_name":"range_end","restriction":""},{"name":"filters","doc":null,"default_value":"nil","external_name":"filters","restriction":""},{"name":"start_revision","doc":null,"default_value":"nil","external_name":"start_revision","restriction":""},{"name":"progress_notify","doc":null,"default_value":"nil","external_name":"progress_notify","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Array(Model::WatchEvent) -> Void)"},"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(key, create_api, range_end, filters, start_revision, progress_notify, &block) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"key:String-instance-method","html_id":"key:String-instance-method","name":"key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L87","def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@key"}},{"id":"start-instance-method","html_id":"start-instance-method","name":"start","doc":"Start the watcher","summary":"<p>Start the watcher</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L111","def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if watching?\n  raise(Etcd::WatchError.new(\"Already watching #{@key}\"))\nend\npost_body = {create_request: {:key => key, :range_end => range_end, :filters => filters, :start_revision => start_revision, :progress_notify => progress_notify}.compact}\n@watching = true\nSimpleRetry.try_to(base_interval: 50.milliseconds, max_interval: 10.seconds, randomise: 100.milliseconds) do\n  if watching?\n    begin\n      api.post(\"/watch\", post_body) do |stream|\n        consume_io(stream.body_io, json_chunk_tokenizer) do |chunk|\n          begin\n            response = Model::WatchResponse.from_json(chunk)\n            if response.error.nil?\n            else\n              raise(IO::EOFError.new)\n            end\n            if response.created || response.result.events.empty?\n            else\n              @block.call(response.result.events)\n            end\n          rescue e\n            if e.message.try(&.includes?(\"<EOF>\"))\n            else\n              raise(Etcd::WatchError.new(e.message))\n            end\n          end\n        end\n      end\n    rescue e\n      if e.is_a?(IO::Error) && e.message.try(&.includes?(\"Closed stream\"))\n      else\n        Log.error(exception: e) do\n          \"Unhandled exception in Etcd::Watcher\"\n        end\n      end\n      if watching?\n        Log.warn do\n          \"Generating new etcd client while watching\"\n        end\n        api.connection.close\n        @api = create_api.call\n      end\n      raise(e)\n    end\n  end\nend\n"}},{"id":"stop-instance-method","html_id":"stop-instance-method","name":"stop","doc":"Close the client and stop the watcher","summary":"<p>Close the client and stop the watcher</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L165","def":{"name":"stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@watching = false\napi.connection.close\n"}},{"id":"watching?:Bool-instance-method","html_id":"watching?:Bool-instance-method","name":"watching?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/watch.cr#L96","def":{"name":"watching?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@watching"}}],"macros":[],"types":[]}]},{"html_id":"etcd/Etcd/WatchError","path":"Etcd/WatchError.html","kind":"class","full_name":"Etcd::WatchError","name":"WatchError","abstract":false,"superclass":{"html_id":"etcd/Etcd/Error","kind":"class","full_name":"Etcd::Error","name":"Error"},"ancestors":[{"html_id":"etcd/Etcd/Error","kind":"class","full_name":"Etcd::Error","name":"Error"},{"html_id":"etcd/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"etcd/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"etcd/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/etcd/error.cr","line_number":18,"url":"https://github.com/place-labs/crystal-etcd/blob/e1f8031dac02bf811a6fce622ccbb64bd4539a02/src/etcd/error.cr#L18"}],"repository_name":"etcd","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"etcd/Etcd","kind":"module","full_name":"Etcd","name":"Etcd"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}}